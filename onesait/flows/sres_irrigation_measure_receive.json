[
  {
      "id": "eb902573.7b7d28",
      "type": "tab",
      "label": "sres_measure_receive",
      "disabled": false,
      "info": ""
  },
  {
      "id": "1fcfa3f1.f25c7c",
      "type": "function",
      "z": "eb902573.7b7d28",
      "name": "Create Message",
      "func": "var values;\nvar newMsg = {};\nnewMsg.type = \"IRRIGATION\";\nnewMsg.payload = {};\nvar irrigationData = {};\nif (msg.topic) {\n    var topicItems = msg.topic.split(\"/\");\n    if (topicItems.length==3) {\n        irrigationData.sysId = topicItems[1];\n        switch(topicItems[2]) {\n            case 'data' :\n            var content = JSON.parse(msg.content);\n            var measures = content.measures;\n            if (measures) {\n            irrigationData.temperature=measures.temperature;\n            irrigationData.humidity=measures.humidity;\n            irrigationData.sm=measures.sm;\n            irrigationData.valve=measures.valve;\n            irrigationData.timestamp=measures.timestamp;\n            if (!irrigationData.timestamp) {\n                irrigationData.timestamp = new Date().toISOString();\n            }\n            newMsg.payload = irrigationData;\n            newMsg.ontology = 'sres_irrigation_data';\n            newMsg.data = irrigationData;\n            }\n            break;            \n        }\n    }\n    return newMsg;\n}\n",
      "outputs": 1,
      "noerr": 0,
      "x": 560,
      "y": 340,
      "wires": [
          [
              "e2ebaaf0.2be588"
          ]
      ]
  },
  {
      "id": "7c0066c3.f372e8",
      "type": "mqtt in",
      "z": "eb902573.7b7d28",
      "name": "systemdata",
      "topic": "sr/+/data",
      "qos": "0",
      "broker": "d3c3ccbb.eb88e",
      "x": 90,
      "y": 120,
      "wires": [
          [
              "54a90677.ff0dd8"
          ]
      ]
  },
  {
      "id": "e2ebaaf0.2be588",
      "type": "onesaitplatform-insert",
      "z": "eb902573.7b7d28",
      "name": "insert_irrigation",
      "ontology": "sres_irrigation_data",
      "authentication": "cmxvcGV6djptdDhZMTFFVi9zL0RjbG4vcFRUanUzZS9pY1l0ckQ2YWNodVNrbW8zTkZBPQ==",
      "x": 800,
      "y": 340,
      "wires": [
          [
              "cd8445fa.782208",
              "ac7e9571.f4c578"
          ]
      ]
  },
  {
      "id": "cd8445fa.782208",
      "type": "debug",
      "z": "eb902573.7b7d28",
      "name": "Result Insert",
      "active": true,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "payload",
      "x": 1050,
      "y": 340,
      "wires": []
  },
  {
      "id": "54a90677.ff0dd8",
      "type": "function",
      "z": "eb902573.7b7d28",
      "name": "Extract sysId",
      "func": "\nif (msg.topic) {\n    var topicItems = msg.topic.split(\"/\");\n    if (topicItems.length==3) {\n        msg.sysId = topicItems[1];\n    }   \n}\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "x": 270,
      "y": 60,
      "wires": [
          [
              "7ef070fe.0a7b"
          ]
      ]
  },
  {
      "id": "7ef070fe.0a7b",
      "type": "function",
      "z": "eb902573.7b7d28",
      "name": "prepare sysTypeQuery",
      "func": "var sysId = msg.sysId;\nmsg.content = msg.payload;\nmsg.ontology = 'sres_estate_system';\nmsg.queryType='SQL';\n//Obtains last measure\nmsg.query = 'select c.type from sres_estate_system as c where c.sysId =\"'+sysId+'\" order by c.timeStamp limit 1';\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "x": 160,
      "y": 200,
      "wires": [
          [
              "c3413822.27c908"
          ]
      ]
  },
  {
      "id": "c3413822.27c908",
      "type": "onesaitplatform-query-dynamic",
      "z": "eb902573.7b7d28",
      "name": "Extract System",
      "authentication": "cmxvcGV6djptdDhZMTFFVi9zL0RjbG4vcFRUanUzZS9pY1l0ckQ2YWNodVNrbW8zTkZBPQ==",
      "x": 140,
      "y": 280,
      "wires": [
          [
              "84c8c0a3.81ac8"
          ]
      ]
  },
  {
      "id": "84c8c0a3.81ac8",
      "type": "json",
      "z": "eb902573.7b7d28",
      "name": "",
      "property": "payload",
      "action": "",
      "pretty": false,
      "x": 170,
      "y": 380,
      "wires": [
          [
              "fa152e82.f4953"
          ]
      ]
  },
  {
      "id": "fa152e82.f4953",
      "type": "switch",
      "z": "eb902573.7b7d28",
      "name": "",
      "property": "payload[0].type",
      "propertyType": "msg",
      "rules": [
          {
              "t": "eq",
              "v": "HEATING",
              "vt": "str"
          },
          {
              "t": "eq",
              "v": "IRRIGATION",
              "vt": "str"
          },
          {
              "t": "eq",
              "v": "LIGHT",
              "vt": "str"
          }
      ],
      "checkall": "true",
      "repair": false,
      "outputs": 3,
      "x": 370,
      "y": 340,
      "wires": [
          [
              "e5f9488c.d875d8"
          ],
          [
              "1fcfa3f1.f25c7c"
          ],
          [
              "c0c3eea.f6e511"
          ]
      ]
  },
  {
      "id": "e5f9488c.d875d8",
      "type": "function",
      "z": "eb902573.7b7d28",
      "name": "Create Message",
      "func": "var values;\nvar newMsg = {};\nnewMsg.type = \"HEATING\";\nnewMsg.payload = {};\nnewMsg.data = msg.payload;\nvar heatingData = {};\nif (msg.topic) {\n    var topicItems = msg.topic.split(\"/\");\n    if (topicItems.length==3) {\n        heatingData.sysId = topicItems[1];\n        switch(topicItems[2]) {\n            case 'data' :\n            var content = JSON.parse(msg.content);\n            var measures = content.measures;\n            if (measures) {\n            heatingData.temperature=measures.temperature;\n            heatingData.valve=measures.valve;\n            heatingData.timestamp=measures.timestamp;\n            if (!heatingData.timestamp) {\n                heatingData.timestamp = new Date().toISOString();\n            }\n            newMsg.payload = heatingData;\n            newMsg.ontology = 'sres_heating_data';\n            newMsg.data = heatingData;\n            }\n            break;            \n        }\n    }\n    return newMsg;\n}\n",
      "outputs": 1,
      "noerr": 0,
      "x": 560,
      "y": 220,
      "wires": [
          [
              "79746a0c.e3ae34"
          ]
      ]
  },
  {
      "id": "79746a0c.e3ae34",
      "type": "onesaitplatform-insert",
      "z": "eb902573.7b7d28",
      "name": "insert_heating",
      "ontology": "sres_heating_data",
      "authentication": "cmxvcGV6djptdDhZMTFFVi9zL0RjbG4vcFRUanUzZS9pY1l0ckQ2YWNodVNrbW8zTkZBPQ==",
      "x": 820,
      "y": 220,
      "wires": [
          [
              "d5349ad.d7f3368",
              "ac7e9571.f4c578"
          ]
      ]
  },
  {
      "id": "d5349ad.d7f3368",
      "type": "debug",
      "z": "eb902573.7b7d28",
      "name": "Result Insert",
      "active": true,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "payload",
      "x": 1050,
      "y": 220,
      "wires": []
  },
  {
      "id": "c0c3eea.f6e511",
      "type": "function",
      "z": "eb902573.7b7d28",
      "name": "Create Message",
      "func": "var values;\nvar newMsg = {};\nnewMsg.type = \"LIGHT\";\nnewMsg.payload = {};\nnewMsg.data = msg.payload;\nvar lampData = {};\nif (msg.topic) {\n    var topicItems = msg.topic.split(\"/\");\n    if (topicItems.length==3) {\n        lampData.sysId = topicItems[1];\n        switch(topicItems[2]) {\n            case 'data' :\n            var content = JSON.parse(msg.content);\n            var measures = content.measures;\n            if (measures) {\n                lampData.luminosity = measures.luminosity;\n                lampData.sound = measures.sound;\n                lampData.light = measures.light;\n                lampData.timestamp=measures.timestamp;\n            if (!lampData.timestamp) {\n                lampData.timestamp = new Date().toISOString();\n            }\n            newMsg.payload = lampData;\n            newMsg.data=lampData;\n            newMsg.ontology = 'sres_lamp_data';\n            }\n            break;            \n        }\n    }\n    return newMsg;\n}\n",
      "outputs": 1,
      "noerr": 0,
      "x": 560,
      "y": 480,
      "wires": [
          [
              "13fe7925.ad66c7"
          ]
      ]
  },
  {
      "id": "13fe7925.ad66c7",
      "type": "onesaitplatform-insert",
      "z": "eb902573.7b7d28",
      "name": "insert_lamp",
      "ontology": "sres_lamp_data",
      "authentication": "cmxvcGV6djptdDhZMTFFVi9zL0RjbG4vcFRUanUzZS9pY1l0ckQ2YWNodVNrbW8zTkZBPQ==",
      "x": 810,
      "y": 480,
      "wires": [
          [
              "f37ac1d9.1d991",
              "ac7e9571.f4c578"
          ]
      ]
  },
  {
      "id": "f37ac1d9.1d991",
      "type": "debug",
      "z": "eb902573.7b7d28",
      "name": "Result Insert",
      "active": true,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "payload",
      "x": 1030,
      "y": 480,
      "wires": []
  },
  {
      "id": "ac7e9571.f4c578",
      "type": "link out",
      "z": "eb902573.7b7d28",
      "name": "",
      "links": [
          "6d2509de.6cd3f8"
      ],
      "x": 1040,
      "y": 280,
      "wires": []
  },
  {
      "id": "d3c3ccbb.eb88e",
      "type": "mqtt-broker",
      "z": "",
      "name": "home_server",
      "broker": "83.46.254.248",
      "port": "1883",
      "clientid": "",
      "usetls": false,
      "compatmode": true,
      "keepalive": "60",
      "cleansession": true,
      "birthTopic": "",
      "birthQos": "1",
      "birthPayload": "",
      "closeTopic": "",
      "closeQos": "0",
      "closePayload": "",
      "willTopic": "",
      "willQos": "0",
      "willPayload": ""
  }
]