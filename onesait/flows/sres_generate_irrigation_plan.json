[
    {
        "id": "326c1cb5.696724",
        "type": "tab",
        "label": "sres_generate_irrigation_plan",
        "disabled": false,
        "info": "Generates irrigation plans.\nFor that purpouse it requires a forecast for the\npostal code on the day calculated and the last measure of sm"
    },
    {
        "id": "9e52fa28.d8d0b8",
        "type": "inject",
        "z": "326c1cb5.696724",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 120,
        "y": 80,
        "wires": [
            [
                "71be4a0e.c3b254"
            ]
        ]
    },
    {
        "id": "71be4a0e.c3b254",
        "type": "onesaitplatform-query-static",
        "z": "326c1cb5.696724",
        "name": "Obtain irrigation systems",
        "ontology": "sres_estate_system",
        "targetDB": "",
        "queryType": "sql",
        "query": "select * from sres_estate_system as c, sres_estate as e where e.resId = c.resId and c.type='IRRIGATION'",
        "authentication": "cmxvcGV6djptdDhZMTFFVi9zL0RjbG4vcFRUanUzZS9pY1l0ckQ2YWNodVNrbW8zTkZBPQ==",
        "x": 310,
        "y": 80,
        "wires": [
            [
                "e7199412.038e18"
            ]
        ]
    },
    {
        "id": "e7199412.038e18",
        "type": "json",
        "z": "326c1cb5.696724",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 80,
        "wires": [
            [
                "1e0a1ef.92d02e1"
            ]
        ]
    },
    {
        "id": "5bdcf8dc.566758",
        "type": "debug",
        "z": "326c1cb5.696724",
        "name": "Result insert",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 450,
        "y": 500,
        "wires": []
    },
    {
        "id": "8e7db45.d645848",
        "type": "change",
        "z": "326c1cb5.696724",
        "name": "move system data",
        "rules": [
            {
                "t": "set",
                "p": "system",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "null",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 80,
        "wires": [
            [
                "c318383f.fac878"
            ]
        ]
    },
    {
        "id": "1e0a1ef.92d02e1",
        "type": "split",
        "z": "326c1cb5.696724",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 650,
        "y": 80,
        "wires": [
            [
                "8e7db45.d645848"
            ]
        ]
    },
    {
        "id": "1c3fb9c8.606676",
        "type": "onesaitplatform-query-dynamic",
        "z": "326c1cb5.696724",
        "name": "Obtain forecast",
        "authentication": "cmxvcGV6djptdDhZMTFFVi9zL0RjbG4vcFRUanUzZS9pY1l0ckQ2YWNodVNrbW8zTkZBPQ==",
        "x": 380,
        "y": 160,
        "wires": [
            [
                "9a2500fd.06218"
            ]
        ]
    },
    {
        "id": "c318383f.fac878",
        "type": "function",
        "z": "326c1cb5.696724",
        "name": "generate forecast query",
        "func": "var postalCode = msg.system.postalCode;\nvar plannedDate = new Date();\nplannedDate.setTime(plannedDate.getTime() + (24*60*60*1000));\nvar date = plannedDate.toISOString().split('T')[0];\nmsg.ontology = 'sres_weather_forecast';\nmsg.queryType='SQL';\n//Obtains weather forecast\nmsg.query = 'select * from sres_weather_forecast as c where c.postalCode = \"'+postalCode+'\" and c.date = \"'+date+'\"order by date DESC limit 1';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 160,
        "wires": [
            [
                "1c3fb9c8.606676"
            ]
        ]
    },
    {
        "id": "9a2500fd.06218",
        "type": "json",
        "z": "326c1cb5.696724",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 160,
        "wires": [
            [
                "7372c006.1c1d"
            ]
        ]
    },
    {
        "id": "734e4d78.713904",
        "type": "change",
        "z": "326c1cb5.696724",
        "name": "move forecast",
        "rules": [
            {
                "t": "set",
                "p": "forecast",
                "pt": "msg",
                "to": "payload[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "null",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 280,
        "wires": [
            [
                "d7bc8cde.03f37"
            ]
        ]
    },
    {
        "id": "7372c006.1c1d",
        "type": "switch",
        "z": "326c1cb5.696724",
        "name": "check forecast",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 700,
        "y": 160,
        "wires": [
            [
                "734e4d78.713904"
            ],
            [
                "f3ef0c18.e6c41"
            ]
        ]
    },
    {
        "id": "d7bc8cde.03f37",
        "type": "function",
        "z": "326c1cb5.696724",
        "name": "generate last measure query",
        "func": "var sysId = msg.system.sysId;\nmsg.ontology = 'sres_irrigation_data';\nmsg.queryType='SQL';\n//Obtains weather forecast\nmsg.query = 'select * from sres_irrigation_data as c where c.sysId = \"'+sysId+'\" order by timestamp DESC limit 1';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 280,
        "wires": [
            [
                "1cd342.5ffc1cbf"
            ]
        ]
    },
    {
        "id": "1cd342.5ffc1cbf",
        "type": "onesaitplatform-query-dynamic",
        "z": "326c1cb5.696724",
        "name": "Obtain last measure",
        "authentication": "cmxvcGV6djptdDhZMTFFVi9zL0RjbG4vcFRUanUzZS9pY1l0ckQ2YWNodVNrbW8zTkZBPQ==",
        "x": 200,
        "y": 380,
        "wires": [
            [
                "711e8081.a6724"
            ]
        ]
    },
    {
        "id": "711e8081.a6724",
        "type": "json",
        "z": "326c1cb5.696724",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 380,
        "wires": [
            [
                "d8a775bf.e7b658"
            ]
        ]
    },
    {
        "id": "d8a775bf.e7b658",
        "type": "switch",
        "z": "326c1cb5.696724",
        "name": "check last measure",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 380,
        "wires": [
            [
                "6d09291f.55f9c8"
            ],
            [
                "17a6f8c7.51b507"
            ]
        ]
    },
    {
        "id": "c14d4838.406928",
        "type": "function",
        "z": "326c1cb5.696724",
        "name": "generate irrigation Plan",
        "func": "const MAX_SM = 100;\nconst RAIN_CHANCE_1 = 25;\nconst RAIN_CHANCE_2 = 50;\nconst RAIN_CHANCE_3 = 90;\nconst IRRIGATION_TIME_1 = 60;\nconst IRRIGATION_TIME_2 = 30;\nconst IRRIGATION_TIME_3 = 15;\nconst HOURS_TIME = 19 * 60;\nvar forecast = msg.forecast;\nvar irrigationData = msg.measure;\nvar irrigationPlan = {};\nirrigationPlan.sysId = msg.system.sysId;\nirrigationPlan.date = msg.forecast.date;\nirrigationPlan.sent = false;\n\nvar startTime = new Date(forecast.date);\nvar endTime = new Date(forecast.date);\n\nirrigationPlan.startTimestamp = startTime;\nirrigationPlan.endTimestamp = endTime;\n\n//Algorithm implementation\nif (irrigationData.sm<MAX_SM) {\n    if (forecast.precipitationChance<RAIN_CHANCE_1) {\n        irrigationTime = IRRIGATION_TIME_1;             \n    } else if (forecast.precipitationChance<RAIN_CHANCE_2) {\n        irrigationTime = IRRIGATION_TIME_2;  \n    } else if (forecast.precipitationChance<RAIN_CHANCE_3) {\n        irrigationTime = IRRIGATION_TIME_3; \n    }\n    msg.irragitionTime = irrigationTime;\n    if (irrigationTime>0) {\n      startTime.setTime(startTime.getTime() + HOURS_TIME * 60* 1000);    \n      endTime.setTime(endTime.getTime() + ((irrigationTime+HOURS_TIME) * 60 * 1000));  \n    }\n}\n\nmsg.ontology = 'sres_irrigation_plan';\nmsg.queryType='SQL';\n//Assings Irriation Plan\nmsg.payload = irrigationPlan;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 380,
        "wires": [
            [
                "f227b6fa.ebd818"
            ]
        ]
    },
    {
        "id": "6d09291f.55f9c8",
        "type": "change",
        "z": "326c1cb5.696724",
        "name": "move last measure",
        "rules": [
            {
                "t": "set",
                "p": "measure",
                "pt": "msg",
                "to": "payload[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "null",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 380,
        "wires": [
            [
                "c14d4838.406928"
            ]
        ]
    },
    {
        "id": "f227b6fa.ebd818",
        "type": "onesaitplatform-insert",
        "z": "326c1cb5.696724",
        "name": "insert irrigation plan",
        "ontology": "sres_irrigation_plan",
        "authentication": "cmxvcGV6djptdDhZMTFFVi9zL0RjbG4vcFRUanUzZS9pY1l0ckQ2YWNodVNrbW8zTkZBPQ==",
        "x": 190,
        "y": 500,
        "wires": [
            [
                "5bdcf8dc.566758"
            ]
        ]
    },
    {
        "id": "778c249f.a99e7c",
        "type": "debug",
        "z": "326c1cb5.696724",
        "name": "IrrigationPlan",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 510,
        "y": 640,
        "wires": []
    },
    {
        "id": "f3ef0c18.e6c41",
        "type": "function",
        "z": "326c1cb5.696724",
        "name": "Fill Incidence Description",
        "func": "msg.sysId = msg.system.sysId;\nmsg.errorDescription = \"No forecast available\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 160,
        "wires": [
            [
                "eae864cd.e6f5b8"
            ]
        ]
    },
    {
        "id": "eae864cd.e6f5b8",
        "type": "link out",
        "z": "326c1cb5.696724",
        "name": "insert incidence",
        "links": [
            "a7bba2a0.d7c97"
        ],
        "x": 1115,
        "y": 680,
        "wires": []
    },
    {
        "id": "44c9f043.590da",
        "type": "debug",
        "z": "326c1cb5.696724",
        "name": "No forecast",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 240,
        "y": 640,
        "wires": []
    },
    {
        "id": "17a6f8c7.51b507",
        "type": "function",
        "z": "326c1cb5.696724",
        "name": "Fill Incidence Description",
        "func": "msg.sysId = msg.system.sysId;\nmsg.errorDescription = \"No measure available\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 520,
        "wires": [
            [
                "eae864cd.e6f5b8"
            ]
        ]
    }
]